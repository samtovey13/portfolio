{"version":3,"sources":["styled/Navbar.js","styled/Headings.js","components/Navbar.js","styled/Anchor.js","styled/List.js","styled/Panel.js","static/images/avatar.svg","components/About.js","styled/FlexContainers.js","components/Skills.js","styled/Modal.js","styled/Button.js","components/Modal.js","components/ProjectCard.js","styled/ProjectCard.js","styled/GridWrappers.js","static/images/surreal-estate/screenshot-sq.png","static/images/weather/weather.png","static/images/nasa/screenshot-sq.png","static/images/music-library/screenshot-sq.png","static/images/book-library/screenshot-sq.png","static/images/cruise-ships/screenshot-sq.png","static/images/surreal-estate/property-search.gif","static/images/surreal-estate/property-favourites.gif","static/images/weather/weather-location.gif","static/images/nasa/NASA-search.gif","static/images/music-library/music-lib-GET.gif","static/images/cruise-ships/cruise-ships-play.gif","static/projects.js","components/Projects.js","styled/ContactForm.js","components/Contact.js","styled/MainContent.js","styled/App.js","components/App.js","index.js"],"names":["StyledNavbar","styled","div","StyledH1","h1","h2","Navbar","className","id","href","aria-label","StyledAnchor","a","StyledList","ul","props","columns","css","StyledPanel","bg","bgImg","col","StyledModalPanel","StyledHeadshot","img","About","src","headshot","alt","height","StyledFlexContainerHorizontal","SkillsWrapper","Skills","StyledModal","StyledButton","button","Modal","hideModal","isOpen","useEffect","document","getElementById","focus","onKeyUp","e","key","tabIndex","onClick","header","summary","links","liveSite","gitRepo","brief","tech","justification","images","gif1","width","challenges","review","ProjectCard","useState","setIsOpen","body","style","top","window","scrollY","position","square","event","preventDefault","scrollTo","parseInt","StyledProjectCard","ProjectGrid","projects","ref","surrealEstateSq","surrealEstateSearchGif","gif2","surrealEstateFavouritesGif","weatherSq","weatherLocationGif","nasaSq","NASASearchGif","musicLibSq","musicLibGetGif","bookLibSq","cruiseShipsSq","cruiseShipsGif","Projects","map","project","index","StyledContactForm","form","Contact","initialState","name","email","message","fields","setFields","success","setSuccess","fail","setFail","handleChange","target","value","onSubmit","emailjs","sendForm","then","error","htmlFor","required","type","onChange","rows","StyledMain","main","StyledApp","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7c7b6189.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst StyledNavbar = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  align-content: center;\n  justify-content: space-between;\n  padding: 20px 20px;\n\n  h1 {\n    text-align: center;\n  }\n  .socials-links {\n    display: flex;\n    flex-flow: row nowrap;\n  }\n\n  .socials-links a svg {\n    height: 30px;\n    width: 30px;\n    color: grey;\n    margin: 0 5px;\n  }\n\n  @media (max-width: 768px) {\n    flex-direction: column-reverse;\n\n    h1 {\n      font-size: 34px;\n      margin: 60px 0 40px 0;\n    }\n  }\n  @media (max-width: 500px) {\n    min-height: 50vh;\n    justify-content: flex-end;\n  }\n`;\n\nexport default StyledNavbar;\n","import styled from \"styled-components\";\n\nconst StyledH1 = styled.h1`\n  margin: 0;\n  padding: 0;\n`;\n\nconst StyledH2 = styled.h2`\n\n`\n\nexport { StyledH1, StyledH2 };\n","import React from 'react';\nimport StyledNavbar from '../styled/Navbar';\nimport { StyledH1 } from '../styled/Headings';\nimport { FaGithub, FaLinkedin, FaTwitter } from 'react-icons/fa';\n\n\nconst Navbar = () => {\n  return (\n    <StyledNavbar className=\"navbar\" id=\"navbar\">\n      <StyledH1>Sam Tovey, Developer</StyledH1>\n      <div className=\"socials-links\">\n        <a href=\"https://github.com/samtovey13\" aria-label=\"Github portfolio\">\n          <FaGithub />\n        </a>\n        <a href=\"https://twitter.com/SamTovey13\" aria-label=\"Twitter profile\">\n          <FaTwitter />\n        </a>\n        <a href=\"https://www.linkedin.com/in/sam-tovey/\" aria-label=\"LinkedIn profile\">\n          <FaLinkedin />\n        </a>\n      </div>\n    </StyledNavbar>\n  );\n}\n\nexport default Navbar;","import styled from 'styled-components';\n\nconst StyledAnchor = styled.a`\n  margin-top: 100px;\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  justify-content: center;\n  width: 200px;\n  padding: 10px;\n  font-size: 20px;\n  font-weight: 700;\n  color: white;\n  border-radius: 30px;\n  border: 2px solid white;\n  text-decoration: none;\n  text-align: center;\n\n  svg {\n    width: 20px;\n    height: 20px;\n    margin-left: 20px;\n  }\n\n  &:hover {\n    background-color: grey;\n  }\n`;\n\nexport default StyledAnchor;","import styled, {css} from 'styled-components';\n\nconst StyledList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n\n  > li {\n    padding: 10px 0;\n\n    > span {\n      font-weight: 800;\n    }\n  }\n\n  ${(props) =>\n    props.columns &&\n    css`\n      display: flex;\n      flex-flow: column nowrap;\n\n      @media (min-width: 700px) {\n        flex-flow: row nowrap;\n        text-align: center;\n\n        > li {\n          margin-right: 60px;\n          flex: 1 1 0;\n          display: flex;\n          flex-flow: column nowrap;\n\n        }\n      }\n    `}\n`;\n\nexport { StyledList };","import styled, {css} from 'styled-components';\n\nconst StyledPanel = styled.div`\n  width: 100%;\n  padding: 60px 0;\n  background-color: ${(props) => props.bg};\n  background-image: ${(props) =>\n    props.bgImg ? `url(${props.bgImg})` : \"none\"};\n  background-repeat: no-repeat;\n  background-size: cover;\n  display: grid;\n  grid-template-columns: 1fr minmax(150px, 900px) 1fr;\n  height: calc(100% - 180px);\n  overflow-y: auto;\n  -ms-overflow-style: none; /* IE and Edge */\n  scrollbar-width: none; /* Firefox */\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  position: relative;\n  &::before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: ${(props) =>\n      props.bgImg ? `rgba(255, 238, 147, 0.9)` : \"none\"};\n  }\n\n  .panel-inner {\n    z-index: 10;\n    grid-column: 2;\n    color: ${(props) => props.col};\n    margin: 0;\n    padding: 40px;\n\n    @media (min-width: 768px) {\n      ${(props) =>\n        props.columns &&\n        css`\n          display: flex;\n          flex-flow: row-reverse;\n          align-items: center;\n          .content-wrapper {\n            padding-right: 40px;\n          }\n        `};\n    }\n  }\n\n  .first-p {\n    font-weight: 800;\n    font-size: 18px;\n    margin-left: 0;\n    margin-bottom: 20px;\n  }\n`;\n\nconst StyledModalPanel = styled(StyledPanel)`\n  padding: 0;\n  height: auto;\n  width: 100%;\n  .panel-inner {\n    padding: 20px;\n  }\n  img {\n    border: 1px solid grey;\n    border-radius: 20px;\n    display: block;\n    margin: 40px auto;\n    max-width: 100%;\n  }\n\n  .modal-panel-header {\n    text-align: center;\n  }\n\n  h1 {\n    margin: 0;\n    padding-top: 40px;\n  }\n  h2 {\n    margin: 40px 0 10px 0;\n    font-size: 22px;\n  }\n  .project-direct-links {\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: center;\n    align-items: stretch;\n    gap: 40px;\n    margin: 60px 0;\n\n    svg {\n      width: 40px;\n      height: 40px;\n      margin-right: 20px;\n    }\n  }\n`;\n\nexport {StyledPanel, StyledModalPanel} ;","export default __webpack_public_path__ + \"static/media/avatar.0a8f2720.svg\";","import React from \"react\";\nimport StyledAnchor from \"../styled/Anchor\";\nimport { StyledList } from '../styled/List';\nimport {StyledPanel} from \"../styled/Panel\";\nimport { FiArrowDown } from \"react-icons/fi\";\nimport headshot from \"../static/images/avatar.svg\";\nimport styled from 'styled-components';\n\nconst StyledHeadshot = styled.img`\n  max-width: 100%;\n  border-radius: 50%;\n  display: block;\n  margin: 10px auto 60px auto;\n`;\n\nconst About = () => {\n  return (\n    <>\n      <StyledPanel className=\"about\" columns bg=\"#DD6E42\" col=\"#FFFFFF\">\n        <div className=\"panel-inner\">\n          <StyledHeadshot\n            className=\"headshot-img\"\n            src={headshot}\n            alt=\"headshot\"\n            height=\"250px\"\n          />\n          <div className=\"content-wrapper\">\n            <h2>My Story</h2>\n            <p className=\"first-p\">\n              Hello. I'm Sam and I'm a Web Developer based in Edinburgh, UK.\n            </p>\n            <p>\n              In 2020 I decided to turn my hobby into a career and enrolled on a\n              part time bootcamp with Manchester Codes. In the past year I've\n              packed a lot of learning into my evenings and weekends, and I am\n              now seeking a junior role in a supportive company where I can\n              continue learning from some of the best professionals in the\n              industry.\n            </p>\n            <StyledAnchor href=\"#projects\">\n              Skip to Projects\n              <FiArrowDown />\n            </StyledAnchor>\n          </div>\n        </div>\n      </StyledPanel>\n      <StyledPanel>\n        <div className=\"panel-inner\">\n          <h2>Things I enjoy:</h2>\n          <StyledList columns>\n            <li>\n              <span>Efficiency. </span>I get huge satisfaction from streamlining\n              and simplifying procedures, helping others to achieve more with\n              fewer resources.\n            </li>\n            <li>\n              <span>A good challenge. </span>Preferably accompanied by a strong\n              coffee and someone to bounce ideas off.\n            </li>\n            <li>\n              <span>Learning on the job. </span>I learn by doing, and I'm always\n              on the lookout for a new favourite tool to make life easier (right\n              now it's Styled Components!)\n            </li>\n          </StyledList>\n        </div>\n      </StyledPanel>\n    </>\n  );\n};\n\nexport default About;\n","import styled from \"styled-components\";\n\nconst StyledFlexContainerHorizontal = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  margin: -10px;\n\n  > span {\n    margin: 10px;\n    flex: 1 1 0px;\n  }\n`;\n\nexport { StyledFlexContainerHorizontal };\n","import React from 'react';\nimport { StyledFlexContainerHorizontal } from '../styled/FlexContainers';\nimport { StyledList } from \"../styled/List\";\nimport {StyledPanel} from '../styled/Panel';\nimport styled from 'styled-components';\n\nconst SkillsWrapper = styled.div`\n  display: flex;\n  flex-flow: column;\n  justify-content: space-between;\n  margin-bottom: 50px;\n\n  @media (min-width: 600px) {\n    flex-direction: row;\n    > * {\n      flex: 1 1 0;\n    }\n  }\n`;\n\n\nconst Skills = () => {\n  return (\n    <>\n      <StyledPanel className=\"skills\" bg=\"#ffe66d\">\n        <div className=\"panel-inner\">\n          <h2>Skills</h2>\n          <SkillsWrapper>\n            <StyledFlexContainerHorizontal>\n              <span>\n                <h3>Frontend</h3>\n                <StyledList>\n                  <li>JavaScript ES6</li>\n                  <li>React</li>\n                  <li>HTML and CSS</li>\n                  <li>Styled Components</li>\n                </StyledList>\n              </span>\n              <span>\n                <h3>Backend</h3>\n                <StyledList>\n                  <li>Node</li>\n                  <li>Express</li>\n                  <li>Sequelize</li>\n                  <li>MySQL</li>\n                </StyledList>\n              </span>\n            </StyledFlexContainerHorizontal>\n            <StyledFlexContainerHorizontal>\n              <span>\n                <h3>Testing</h3>\n                <StyledList>\n                  <li>Jest</li>\n                  <li>Mocha</li>\n                  <li>Chai</li>\n                </StyledList>\n              </span>\n              <span>\n                <h3>General</h3>\n                <StyledList>\n                  <li>Git</li>\n                  <li>NPM</li>\n                  <li>Docker</li>\n                </StyledList>\n              </span>\n            </StyledFlexContainerHorizontal>\n          </SkillsWrapper>\n        </div>\n      </StyledPanel>\n      <StyledPanel>\n        <div className=\"panel-inner\">\n          <p className=\"first-p\">\n            As a career-switcher I bring a lot more to coding than simply\n            technical skills:\n          </p>\n          <StyledList columns>\n            <li>\n              <span>Customer service pro. </span> I understand the importance of\n              looking after the client and working to a brief.\n            </li>\n            <li>\n              <span>Experienced Retail Manager. </span> I've spent many years\n              playing with databases to make life easier through automation and\n              efficiency.\n            </li>\n            <li>\n              <span>Background in the visual arts. </span> I love colour and \n              clean design.\n            </li>\n          </StyledList>\n        </div>\n      </StyledPanel>\n    </>\n  );\n}\n\nexport default Skills;","import styled from \"styled-components\";\n\nconst StyledModal = styled.div`\n  .modal-overlay {\n    position: fixed;\n    display: block;\n    width: 100%;\n    height: 100vh;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    margin: auto;\n    background-color: rgba(0, 0, 0, 0.5);\n    z-index: 100;\n  }\n\n  .modal-wrapper {\n    position: fixed;\n    top: 10px;\n    left: 10px;\n    bottom: 10px;\n    right: 10px;\n  }\n\n  .modal-container {\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: space-between;\n    position: relative;\n    margin: auto;\n    max-width: 1000px;\n    height: calc(100% - 20px);\n    background-color: #ffffff;\n    border-radius: 8px;\n    z-index: 101;\n\n    .modal-header,\n    .modal-footer {\n      width: 100%;\n      z-index: 100;\n    }\n\n    .modal-header {\n      position: absolute;\n      top: 0;\n      background-image: linear-gradient(\n        to top,\n        rgba(0, 0, 0, 0),\n        rgba(255, 255, 255, 1)\n      );\n      border-radius: 8px;\n    }\n    .modal-footer {\n      position: absolute;\n      bottom: 0;\n      height: 120px;\n      background-image: linear-gradient(\n        to bottom,\n        rgba(0, 0, 0, 0),\n        rgba(255, 255, 255, 1)\n      );\n      border-radius: 8px;\n    }\n\n    .button-anchor {\n      text-decoration: none;\n    }\n\n    .x-button {\n      border: 2px solid lightgrey;\n      border-radius: 8px;\n      background-color: white;\n      display: block;\n      float: right;\n      margin: 5px;\n      padding: 5px 10px 2px 10px;\n      font-size: 24px;\n      color: grey;\n      cursor: pointer;\n    }\n    .hide-button {\n      display: block;\n      margin: 50px auto 100px auto;\n    }\n  }\n`;\n\nexport default StyledModal;\n","import styled from 'styled-components';\n\nconst StyledButton = styled.button`\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  justify-content: center;\n  width: 200px;\n  padding: 10px;\n  font-size: 20px;\n  font-weight: 700;\n  color: white;\n  background-color: #dd6e42;\n  border-radius: 30px;\n  border: 2px solid white;\n  text-decoration: none;\n  box-shadow: 2px 3px 5px 6px #ccc;\n  text-align: center;\n  font-family: \"Khula\", sans-serif;\n\n  svg {\n    width: 20px;\n    height: 20px;\n    margin-left: 20px;\n  }\n\n  &:hover {\n    background-color: grey;\n    cursor: pointer;\n  }\n`;\n\nexport default StyledButton","import React, { useEffect } from \"react\";\nimport StyledModal from \"../styled/Modal\";\nimport { StyledModalPanel } from \"../styled/Panel\";\nimport { FaGithub } from 'react-icons/fa';\nimport { GiMouse } from 'react-icons/gi';\nimport StyledButton from \"../styled/Button\";\n\nconst Modal = ({ props, hideModal, isOpen }) => {\n\n  const handleKeyUp = (e) => {\n    if (e.key === \"Escape\") {\n      hideModal(e);\n    }\n  };\n\n  useEffect(() => {\n    document.getElementById(\"modal\").focus();\n  }, []);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return (\n    <StyledModal id=\"modal\" onKeyUp={handleKeyUp} tabIndex={-1}>\n      <div className=\"modal-overlay\">\n        <div className=\"modal-wrapper\">\n          <div className=\"modal-container\">\n            <div className=\"modal-header\">\n              <button className=\"x-button\" onClick={hideModal}>\n                X\n              </button>\n            </div>\n\n            <StyledModalPanel className=\"modal-panel\">\n              <div className=\"panel-inner\">\n                <div className=\"modal-panel-header\">\n                  <h1>{props.header}</h1>\n                  <p className=\"first-p\">{props.summary}</p>\n                </div>\n\n                <div className=\"project-direct-links\">\n                  {props.links.liveSite ? (\n                    <a className=\"button-anchor\" href={props.links.liveSite}>\n                      <StyledButton\n                        className=\"live-site-button\"\n                      >\n                        <GiMouse />\n                        Live Site\n                      </StyledButton>\n                    </a>\n                  ) : null}\n                  {props.links.gitRepo ? (\n                    <a className=\"button-anchor\" href={props.links.liveSite}>\n                      <StyledButton\n                        className=\"git-repo-button\"\n                        href={props.links.gitRepo}\n                      >\n                        <FaGithub />\n                        Git Repo\n                      </StyledButton>\n                    </a>\n                  ) : null}\n                </div>\n\n                <h2>The Brief</h2>\n                <p>{props.brief}</p>\n\n                <h2>Tech</h2>\n                <p>{props.tech}</p>\n\n                <h2>Justification</h2>\n                <p>{props.justification}</p>\n\n                <img\n                  src={props.images.gif1}\n                  alt=\"GIF showing project in action\"\n                  width=\"500px\"\n                />\n\n                <h2>Challenges</h2>\n                <p>{props.challenges}</p>\n\n                <h2>Reflection</h2>\n                <p>{props.review}</p>\n\n                <StyledButton className=\"hide-button\" onClick={hideModal}>\n                  Hide\n                </StyledButton>\n              </div>\n            </StyledModalPanel>\n            <div className=\"modal-footer\"></div>\n          </div>\n        </div>\n      </div>\n    </StyledModal>\n  );\n};\n\nexport default Modal;\n","import React, { useState } from \"react\";\nimport Modal from \"./Modal\";\n\nconst ProjectCard = ({ props }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const showModal = () => {\n    setIsOpen(true);\n    document.body.style.top = `-${window.scrollY}px`;\n    document.body.style.position = \"fixed\";\n  };\n\n  const hideModal = (event) => {\n    event.preventDefault();\n    setIsOpen(false);\n    const scrollY = document.body.style.top;\n    document.body.style.position = \"\";\n    document.body.style.top = \"\";\n    window.scrollTo(0, parseInt(scrollY || \"0\") * -1);\n  };\n\n  return (\n    <>\n      <div\n        className=\"modal-button\"\n        onClick={(e) => {\n          showModal(e);\n        }}\n      >\n        <div className=\"card-img-wrapper\">\n          <img\n            className=\"card-img\"\n            src={props.images.square}\n            alt={props.header + \" screenshot\"}\n            width=\"100%\"\n          />\n        </div>\n\n        <div>\n          <h3>{props.header}</h3>\n          <p>{props.summary}</p>\n        </div>\n      </div>\n      { \n        isOpen && <Modal\n          props={props}\n          hideModal={hideModal}\n          isOpen={isOpen}\n        /> \n      }\n    </>\n  );\n};\n\nexport default ProjectCard;\n","import styled from \"styled-components\";\n\nconst StyledProjectCard = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: flex-start;\n  flex-flow: column nowrap;\n  box-sizing: border-box;\n  box-shadow: 2px 4px 6px 2px #888888;\n  position: relative;\n  background-color: white;\n  border-radius: 20px;\n\n  .card-img {\n    max-width: 100%;\n    height: auto;\n    margin: 0;\n    display: block;\n    box-sizing: border-box;\n    border-radius: 20px 20px 0 0;\n  }\n\n  .card-img-wrapper {\n    position: relative;\n    box-sizing: border-box;\n    z-index: 0;\n    border-radius: 20px 20px 0 0;\n\n    &:after {\n      content: \"\";\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-image: linear-gradient(\n        rgba(255, 255, 255, 0.4),\n        rgba(0, 0, 0, 1)\n      );\n      border-radius: 20px 20px 0 0;\n    }\n  }\n\n  h3 {\n    margin: 10px 10px 0 10px;\n  }\n\n  p {\n    margin: 0 10px 10px 10px;\n  }\n`;\n\nexport default StyledProjectCard;\n","import styled from \"styled-components\";\n\nconst ProjectGrid = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-auto-rows: minmax(300px, auto);\n  grid-gap: 40px;\n`;\n\nexport { ProjectGrid };\n","export default __webpack_public_path__ + \"static/media/screenshot-sq.cc49f2db.png\";","export default __webpack_public_path__ + \"static/media/weather.b8a3dff5.png\";","export default __webpack_public_path__ + \"static/media/screenshot-sq.341e338c.png\";","export default __webpack_public_path__ + \"static/media/screenshot-sq.689f810b.png\";","export default __webpack_public_path__ + \"static/media/screenshot-sq.00183d54.png\";","export default __webpack_public_path__ + \"static/media/screenshot-sq.5dfb4364.png\";","export default __webpack_public_path__ + \"static/media/property-search.0f3e94a9.gif\";","export default __webpack_public_path__ + \"static/media/property-favourites.a7639f7c.gif\";","export default __webpack_public_path__ + \"static/media/weather-location.914eaca5.gif\";","export default __webpack_public_path__ + \"static/media/NASA-search.a8a1704a.gif\";","export default __webpack_public_path__ + \"static/media/music-lib-GET.f3fe2b2e.gif\";","export default __webpack_public_path__ + \"static/media/cruise-ships-play.5fc06561.gif\";","// square card images\nimport surrealEstateSq from \"./images/surreal-estate/screenshot-sq.png\";\nimport weatherSq from \"./images/weather/weather.png\";\nimport nasaSq from \"./images/nasa/screenshot-sq.png\";\nimport musicLibSq from \"./images/music-library/screenshot-sq.png\";\nimport bookLibSq from \"./images/book-library/screenshot-sq.png\";\nimport cruiseShipsSq from \"./images/cruise-ships/screenshot-sq.png\";\n\n// gifs\nimport surrealEstateSearchGif from \"./images/surreal-estate/property-search.gif\";\nimport surrealEstateFavouritesGif from \"./images/surreal-estate/property-favourites.gif\";\nimport weatherLocationGif from \"./images/weather/weather-location.gif\"\nimport NASASearchGif from \"./images/nasa/NASA-search.gif\";\nimport musicLibGetGif from \"./images/music-library/music-lib-GET.gif\";\nimport cruiseShipsGif from \"./images/cruise-ships/cruise-ships-play.gif\";\n\nconst projects = [\n  // Surreal Estate\n  {\n    ref: \"SurrealEstate\",\n    header: \"Surreal Estate\",\n    summary: \"React Property search app with API and Facebook SSO\",\n    images: {\n      square: surrealEstateSq,\n      gif1: surrealEstateSearchGif,\n      gif2: surrealEstateFavouritesGif,\n    },\n    links: {\n      liveSite: \"https://samtovey-surreal-estate.netlify.app\",\n      gitRepo: \"https://github.com/samtovey13/surreal-estate\",\n    },\n    brief: (\n      <>\n        Build a property search engine with multiple pages:\n        <li>\n          A listings page where you can search for properties and sort/filter\n          the results\n        </li>\n        <li>An 'add property' page where users can add new properties</li>\n        <li>A favourites page where users can view their saved properties</li>\n      </>\n    ),\n    tech: (\n      <>\n        React, React Router, Facebook SSO, PropTypes, Axios, QS, Docker Compose\n      </>\n    ),\n    justification: (\n      <>\n        I built the app using React for efficiency and ability to reuse\n        components across the app. For example the PropertyCard component could\n        be used in the listings page and again inside a popup from the\n        Favourites page. I used QS in conjunction with React Router to implement\n        client-side routing.\n      </>\n    ),\n    challenges: (\n      <>\n        Initially I had problems with testing as my app became more complex. To\n        resolve this I refactored my code and shifted my onClick and onChange\n        functions up a level to pass them down to the component as a prop\n        instead. Isolating parts of the functional code in this way allowed me\n        to use Jest mocks and test the code at a lower level.\n      </>\n    ),\n    review: (\n      <>\n        With more time I would add functionality to the 'add property' form to\n        allow the user to upload an image when creating a new property. I would\n        also replicate the filters/sort options of the main property listings\n        page onto the favourites page.\n        <br />I would also build on the SSO feature by giving the user\n        alternative login methods, eg login with Google or Github, or by adding\n        my own custom OAuth.\n      </>\n    ),\n  },\n  // Weather App\n  {\n    ref: \"Weather\",\n    header: \"Umbrella Weather\",\n    summary: \"React weather app with live API\",\n    images: {\n      square: weatherSq,\n      gif1: weatherLocationGif,\n    },\n    links: {\n      liveSite: \"https://samtovey13.github.io/weather-app\",\n      gitRepo: \"https://github.com/samtovey13/weather-app\",\n    },\n    brief: (\n      <>\n        Build a weather app that receives live weather data. Users should be\n        able to:\n        <li>Select a location</li>\n        <li>See a summary of each of the weather for a 5-day forecast</li>\n        <li>Click on one of the summaries to view full forecast details.</li>\n      </>\n    ),\n    tech: <>React Hooks, Jest, PropTypes, Axios, CSS</>,\n    justification: (\n      <>\n        The app was built as a Single Page Application with React. Using React\n        keeps the app light and fast, as forecast data can be updated without\n        reloading the whole page. It also meant that components such as the\n        forecast summary cards could be reused.\n      </>\n    ),\n    challenges: (\n      <>\n        All parts of the forecast and location display rely on data from the API\n        call made automatically when the app is first opened. This initially\n        resulted in a very juddery loading experience as each component\n        spluttered into view. To smooth the visual transition I implemented\n        conditional rendering so that a 'loading' graphic was displayed while\n        the API request was in progress, and the whole app rendered as one when\n        the data was ready to display. This gave a more professional, polished\n        feel.\n      </>\n    ),\n    review: (\n      <>\n        The app currently receives quite limited data from a slimmed-down\n        version of the Open Weather Map API - eg it can only search for cities\n        within the UK. I would like to connect it directly to the Open Weather\n        Map instead in order to receive a wider range of data.\n        <br />I also want to build an autocorrecting search bar to make it\n        easier for users to find a location.\n      </>\n    ),\n  },\n  // NASA Search\n  {\n    ref: \"NASA\",\n    header: \"Nasa Image Search\",\n    summary: \"React app with image gallery\",\n    images: {\n      square: nasaSq,\n      gif1: NASASearchGif,\n    },\n    links: {\n      liveSite: \"https://samtovey13.github.io/NASA-image-search\",\n      gitRepo: \"https://github.com/samtovey13/NASA-image-search\",\n    },\n    brief: (\n      <>\n        Technical test: 10hrs. Build a React web application that allows users\n        to search for images based on a query relating to space. You are\n        provided the NASA API endpoint for image search. The following\n        functionalities should be implemented:\n        <li>\n          A search page which allows users to search for images by keyword\n        </li>\n        <li>Images must be returned upon a successful search</li>\n      </>\n    ),\n    tech: <>React Hooks, Jest, PropTypes, Axios, CSS</>,\n    justification: (\n      <>I used React to enable the search results to be stored in state.</>\n    ),\n    challenges: (\n      <>\n        This was my first project completed under timed conditions so it was\n        important to prioritise the functionality of the app over styling.\n      </>\n    ),\n    review: (\n      <>\n        Given more time I would add ability to search and display videos as well\n        as images. I would add radio checkboxes to select content type when\n        searching.\n        <br />I would also improve the image gallery layout to minimise white\n        space in between images.\n      </>\n    ),\n  },\n  // Music Library\n  {\n    ref: \"MusicLib\",\n    header: \"Music Library API\",\n    summary: \"Artists, Songs and Albums\",\n    images: {\n      square: musicLibSq,\n      gif1: musicLibGetGif,\n    },\n    links: {\n      liveSite: \"https://music-library-api-demo.herokuapp.com\",\n      gitRepo: \"https://github.com/samtovey13/music-library-api\",\n    },\n    brief: (\n      <>\n        Build a music library API that will store information about artists,\n        albums and songs. It should implement a CRUD REST API to interact with a\n        MySQL database.\n      </>\n    ),\n    tech: (\n      <>\n        MySQL, Sequelize, Express, Docker, Dotenv, Nodemon, Mocha, Chai,\n        Supertest\n      </>\n    ),\n    justification: (\n      <>\n        I used Express which made it easier to process the API data in JSON\n        format.\n        <br />\n        Dotenv allowed me to easily switch between different environment\n        variables as needed, to enable me to connect to my local database while\n        building the app and then connect to the production database when ready\n        to deploy.\n        <br />\n        Using Mocha ensured that tests were run synchronously for this app,\n        while the assertion library from Chai provided more options for checking\n        the behaviour of the app in testing.\n      </>\n    ),\n    challenges: (\n      <>\n        This project was my first using Docker. I initially ran into many\n        technical problems with installation (due to attempting to install\n        Docker within my Linux installation which was itself a container within\n        my ChromeOS!)... in the end this actually improved my understanding of\n        how Docker operates and the role of containers in other aspects of my\n        tech usage.\n      </>\n    ),\n    review: (\n      <>\n        The API could be made more complex by adding futher database tables, for\n        example Genre, to create different associations between the data.\n      </>\n    ),\n  },\n  // Book Library\n  {\n    ref: \"BookLib\",\n    header: \"Book Library API\",\n    summary: \"Readers, Books and Genres\",\n    images: {\n      square: bookLibSq,\n    },\n    links: {\n      liveSite: \"\",\n      gitRepo: \"https://github.com/samtovey13/book-library-api\",\n    },\n    brief: (\n      <>\n        Build a music library API that will store information about books,\n        genres and readers. It should implement a CRUD REST API to interact with\n        a MySQL database.\n        <li>All book items must have at least a title and an author</li>\n        <li>Users should be able to search for books by genre</li>\n        <li>The reader must sign up with a valid email and password</li>\n        <li>\n          For security, the reader's password should not be returned from the\n          API\n        </li>\n      </>\n    ),\n    tech: (\n      <>\n        MySQL, Sequelize, Express, Docker, Dotenv, Nodemon, Mocha, Chai,\n        Supertest\n      </>\n    ),\n    justification: (\n      <>\n        I implemented Sequelize validation methods to check the validity of data\n        before it is handled by the API. This helps to prevent malicious users\n        sending dangerous input to the server.\n        <br />\n        I used Express which made it easier to process the API data in JSON\n        format.\n        <br />\n        Dotenv allowed me to easily switch between different environment\n        variables as needed, to enable me to connect to my local database while\n        building the app and then connect to the production database when ready\n        to deploy.\n        <br />\n        Using Mocha ensured that tests were run synchronously for this app,\n        while the assertion library from Chai provided more options for checking\n        the behaviour of the app in testing.\n      </>\n    ),\n    challenges: (\n      <>\n        This project required advance Sequelize schema validation which required\n        a high attention to detail to implement.\n        <br />\n        There were also complex relationships between database tables to work\n        through and it was a challenge to construct the all associations in the\n        right directions.\n      </>\n    ),\n    review: (\n      <>\n        With more time I would improve the error handling and validation methods\n        of this app, for example to prevent duplicate records being created.\n        <br />I made use of a 'helper' file to refactor my code in the\n        controllers, to improve reusability and make the code DRY. This same\n        'helper' setup could be replicated in the test files to improve\n        efficiency.\n      </>\n    ),\n  },\n  // Cruise Ships\n  {\n    ref: \"CruiseShips\",\n    header: \"Cruise Ships\",\n    summary: \"Vanilla JavaScript app with retro UI\",\n    images: {\n      square: cruiseShipsSq,\n      gif1: cruiseShipsGif,\n    },\n    links: {\n      liveSite: \"https://samtovey13.github.io/cruise-ships\",\n      gitRepo: \"https://github.com/samtovey13/cruise-ships\",\n    },\n    brief: (\n      <>\n        Build an app for a cruise ship captain to track the voyage of a ship. \n        The ship should be able to set sail and dock at all ports on the specified route.\n        The user should be able to create their own itinerary for the ship to follow.\n      </>\n    ),\n    tech: <>JavaScript, HTML, CSS</>,\n    justification: (\n      <>\n        This project used Vanilla JavaScript with the aim to become familiar\n        with the principles of Object-Oriented Programming.\n        <br/>\n        Jest mocks and spies were used to emulate dependencies in tests and to track the \n        call history of other functions.\n        <br/>\n        A simple UI was built with HTML and CSS to enable users to select an intinerary\n        and to visualise the progress of the ship on its journey.\n      </>\n    ),\n    challenges:( \n      <>\n        In this project the brief became more and more complex as the project progressed \n        and new user stories were added. This forced me to consider the scalability of the code I was writing and dependencies \n        between each component. It was hard work constantly refactoring and rethinking the \n        structure as the brief changed, but ultimately a valuable learning experience in that\n        it replicated the unpredictability of working on a real project.\n        <br/>\n        I spent a lot of time learning about advanced Jest testing in order to test specific \n        parts of my code in isolation.\n      </>\n    ),\n    review: (\n      <> \n        Given more time I would improve the responsiveness of the UI, which currently\n        includes a horizontal scroll bar which does not create the best user experience.\n        This animated section which visualises the ship's journey would be more effective \n        with the ship displayed in a fixed position while the ports move behind it.\n      </>\n    ),\n  },\n];\n\nexport default projects;\n","import React from \"react\";\nimport ProjectCard from './ProjectCard';\nimport StyledProjectCard from \"../styled/ProjectCard\";\nimport { ProjectGrid } from \"../styled/GridWrappers\";\nimport {StyledPanel} from \"../styled/Panel\";\n\nimport projects from \"../static/projects\";\n\nconst Projects = () => {\n  return (\n    <StyledPanel className=\"projects\" id=\"projects\" bg=\"#EAEAEA\">\n      <div className=\"panel-inner\">\n        <h2>Projects</h2>\n        <ProjectGrid className=\"projects-grid\">\n          {projects.map((project, index) => {\n            return (\n              <StyledProjectCard className=\"project-card\" key={index}>\n                <ProjectCard props={project} />\n              </StyledProjectCard>\n            );\n          })}\n        </ProjectGrid>\n      </div>\n    </StyledPanel>\n  );\n};\n\nexport default Projects;\n","import styled from \"styled-components\";\n\nconst StyledContactForm = styled.form`\n  display: flex;\n  flex-flow: column nowrap;\n  max-width: 600px;\n  margin: auto;\n\n  input,\n  label,\n  textarea {\n    font-size: 20px;\n    border: none;\n  }\n\n  label {\n    margin: 0;\n    padding: 10px 0;\n  }\n\n  textarea {\n    width: 100%;\n  }\n\n  input {\n    min-width: 70%;\n    max-width: 100%;\n  }\n\n  input,\n  textarea {\n    display: block;\n    margin: 10px 0 20px 0;\n    padding: 8px;\n    border-radius: 5px;\n    &:focus {\n      outline-color: #dd6e42;\n    }\n  }\n\n  .contact-buttons {\n    margin-top: 50px;\n    display: flex;\n    flex-flow: row wrap;\n    align-items: stretch;\n  }\n\n  .contact-submit-button,\n  .jump-to-top-anchor {\n    margin: 10px;\n    padding: 10px;\n    box-shadow: none;\n    flex: 1 0 200px;\n  }\n\n  .jump-to-top-anchor {\n    color: #dd6e42;\n    background-color: white;\n    border-color: #dd6e42;\n\n    &:hover {\n      background-color: #eaeaea;\n    }\n  }\n`;\n\nexport default StyledContactForm;\n","import React, { useState } from \"react\";\nimport StyledContactForm from '../styled/ContactForm';\nimport {StyledPanel} from '../styled/Panel';\nimport emailjs from 'emailjs-com';\nimport StyledButton from \"../styled/Button\";\nimport StyledAnchor from \"../styled/Anchor\";\nimport {FaArrowUp, FaTelegramPlane} from 'react-icons/fa';\n\nconst Contact = () => {\n  \n  const initialState = {\n    name: \"\",\n    email: \"\",\n    message: \"\",\n  };\n\n  const [fields, setFields] = useState(initialState);\n  const [success, setSuccess] = useState(false);\n  const [fail, setFail] = useState(false);\n\n  const handleChange = (event) => {\n    setFields({ ...fields, [event.target.name]: event.target.value });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setSuccess(false);\n    setFail(false);\n    emailjs\n      .sendForm(\n        \"contact-service\",\n        \"contact-form\",\n        event.target,\n        \"user_6ifIq0vO4Nx3KZmi56zJI\"\n      )\n      .then(() => {\n        setSuccess(true);\n        setFields(initialState);\n      }, (error) => {\n        setFail(true);\n      });\n  }\n\n  return (\n    <StyledPanel className=\"contact\" bg=\"#ffe66d\">\n      <div className=\"panel-inner\">\n        <h2>Contact</h2>\n        <div className=\"alert\">\n          {success && <p className=\"success-message\">Success! Message sent.</p>}\n          {fail && <p className=\"fail-message\">Error! Message not sent.</p>}\n        </div>\n        <StyledContactForm name=\"contact-form\" onSubmit={handleSubmit}>\n          <label htmlFor=\"name\">\n            Name\n            <input\n              required\n              type=\"text\"\n              name=\"name\"\n              value={fields.name}\n              onChange={handleChange}\n            ></input>\n          </label>\n\n          <label htmlFor=\"email\">\n            Email\n            <input\n              required\n              type=\"email\"\n              name=\"email\"\n              value={fields.email}\n              onChange={handleChange}\n            ></input>\n          </label>\n\n          <label htmlFor=\"message\">\n            Message\n            <textarea\n              required\n              name=\"message\"\n              width=\"100%\"\n              rows=\"10\"\n              value={fields.message}\n              onChange={handleChange}\n            ></textarea>\n          </label>\n\n          <div className=\"contact-buttons\">\n            <StyledButton type=\"submit\" className=\"contact-submit-button\">\n              Send\n              <FaTelegramPlane />\n            </StyledButton>\n            <StyledAnchor href=\"#navbar\" className=\"jump-to-top-anchor\">\n              Back to top\n              <FaArrowUp />\n            </StyledAnchor>\n          </div>\n        </StyledContactForm>\n      </div>\n    </StyledPanel>\n  );\n}\n\nexport default Contact;","import styled from \"styled-components\";\n\nconst StyledMain = styled.main`\n  margin: 0;\n  padding: 0;\n  width: 100%;\n`;\n\nexport default StyledMain;\n","import styled from 'styled-components';\n\nconst StyledApp = styled.div`\n  margin: 0;\n  padding: 0;\n  width: 100%;\n`;\n\nexport default StyledApp;","import Navbar from \"./Navbar\";\nimport About from \"./About\";\nimport Skills from \"./Skills\";\nimport Projects from \"./Projects\";\nimport Contact from \"./Contact\";\nimport StyledMain from \"../styled/MainContent\";\nimport StyledApp from \"../styled/App\";\n\nfunction App() {\n  return (\n    <StyledApp className=\"app\">\n      <Navbar />\n      <StyledMain>\n        <About />\n        <Skills />\n        <Projects />\n        <Contact />\n      </StyledMain>\n    </StyledApp>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}